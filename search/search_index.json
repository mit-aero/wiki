{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to AeroWiki How to Use Visit AeroWiki How to contribute Clone this repository Add or edit markdown files in docs directory. Push changes.","title":"Home"},{"location":"#welcome-to-aerowiki","text":"","title":"Welcome to AeroWiki"},{"location":"#how-to-use","text":"Visit AeroWiki","title":"How to Use"},{"location":"#how-to-contribute","text":"Clone this repository Add or edit markdown files in docs directory. Push changes.","title":"How to contribute"},{"location":"aerowiki/deployment/","text":"Deployment This page describes how the aerowiki infrastructure is deployed. Source The source of the wiki is a the wiki repository . This repository contains the markdown files for the content, the MkDocs configuration file and the deployment scripts. Source files The source files are in the docs directory. MkDocs config The MkDocs config is in the mkdocs.yml file at the root of the repository. Deployment scripts The wiki is hosted on github pages. Since github does not allow content from a private repository to be published on github pages, the markdown files in this repository are converted into html and pushed into a [separate repository]. This repository contains a deploy script in the .github/workflows/deploy.yml file. It uses Github Actions to convert markdown files into html using MkDocs and pushes them to the aerowiki repository. The script uses credentials of the mit-aero-bot account. It uses a fine-grained access token to grant read and write access of repositories to the action runner. Steps: Create a fine grained token in the mit-aero-bot account. Login to mit-aero-bot account. Go to Settings > Developer Settings > Personal Access Tokens > Fine-grained tokens. Click generate new token. Give the token a name. Set the resource owner as the mit-aero organization. Set the expiration date to the max permitted value (366 days in this case). In Resource Access select the option Only select repositories. Choose the repositories that the token should have access to (wiki and aerowiki in this case). Click Add permissions button and select Contents. Select Read and write from the access dropdown for contents. Click Generate token and request access. Copy the access token. Grant permission to token for organization. Login to admin account. Go to the organization page. Go to Settings > Personal access tokens > Pending requests. Approve the request. Add token to repository secrets. Go to wiki repository . Go to Settings > Secrets and variables > Actions. Scroll to Repository secrets. Edit or create a new secret called PUSH_REPO_TOKEN. In it paste the access token in the value field. Test the new token. Now the token should be usable Make any commit to the wiki repository and see if the workflow run succeeds or not.","title":"Deployment"},{"location":"aerowiki/deployment/#deployment","text":"This page describes how the aerowiki infrastructure is deployed.","title":"Deployment"},{"location":"aerowiki/deployment/#source","text":"The source of the wiki is a the wiki repository . This repository contains the markdown files for the content, the MkDocs configuration file and the deployment scripts.","title":"Source"},{"location":"aerowiki/deployment/#source-files","text":"The source files are in the docs directory.","title":"Source files"},{"location":"aerowiki/deployment/#mkdocs-config","text":"The MkDocs config is in the mkdocs.yml file at the root of the repository.","title":"MkDocs config"},{"location":"aerowiki/deployment/#deployment-scripts","text":"The wiki is hosted on github pages. Since github does not allow content from a private repository to be published on github pages, the markdown files in this repository are converted into html and pushed into a [separate repository]. This repository contains a deploy script in the .github/workflows/deploy.yml file. It uses Github Actions to convert markdown files into html using MkDocs and pushes them to the aerowiki repository. The script uses credentials of the mit-aero-bot account. It uses a fine-grained access token to grant read and write access of repositories to the action runner.","title":"Deployment scripts"},{"location":"aerowiki/deployment/#steps","text":"Create a fine grained token in the mit-aero-bot account. Login to mit-aero-bot account. Go to Settings > Developer Settings > Personal Access Tokens > Fine-grained tokens. Click generate new token. Give the token a name. Set the resource owner as the mit-aero organization. Set the expiration date to the max permitted value (366 days in this case). In Resource Access select the option Only select repositories. Choose the repositories that the token should have access to (wiki and aerowiki in this case). Click Add permissions button and select Contents. Select Read and write from the access dropdown for contents. Click Generate token and request access. Copy the access token. Grant permission to token for organization. Login to admin account. Go to the organization page. Go to Settings > Personal access tokens > Pending requests. Approve the request. Add token to repository secrets. Go to wiki repository . Go to Settings > Secrets and variables > Actions. Scroll to Repository secrets. Edit or create a new secret called PUSH_REPO_TOKEN. In it paste the access token in the value field. Test the new token. Now the token should be usable Make any commit to the wiki repository and see if the workflow run succeeds or not.","title":"Steps:"}]}